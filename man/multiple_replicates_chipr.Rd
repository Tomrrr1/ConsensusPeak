% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/multiple_replicates_chipr.R
\name{multiple_replicates_chipr}
\alias{multiple_replicates_chipr}
\title{Call peaks with MACSr and generate consensus set with ChIP-R}
\usage{
multiple_replicates_chipr(
  treat_files,
  control_files = NULL,
  is_paired = FALSE,
  out_dir = tempdir(),
  subdir_name = "chipr_analysis",
  minentries = 2,
  rankmethod = "pvalue",
  duphandling = "average",
  fragment = FALSE,
  seed = 0.5,
  alpha = 0.05,
  size = 20,
  ...
)
}
\arguments{
\item{treat_files}{Character vector containing paths to the treatment BAM
files.}

\item{control_files}{Character vector containing paths to the control BAM
files.}

\item{is_paired}{Logical, specifying whether or not the BAM file is
paired-end.}

\item{out_dir}{Character specifying the name of the output directory in which
a subdirectory containing the output files will be created.}

\item{subdir_name}{Character specifying the name of the subdirectory that the
output files will be written to.}

\item{minentries}{The minimum number of intersections a given peak must
satisfy.}

\item{rankmethod}{The ranking method used to rank peaks within
replicates. Options include "signalvalue", "pvalue" and "qvalue". The
default is "pvalue".}

\item{duphandling}{Method for breaking ties. The options are "average" or
"random". The default is "average".}

\item{fragment}{Logical specifying whether the input peaks should be subject
to high levels of fragmentation. The default is FALSE.}

\item{seed}{Numeric specifying a seed for when duphandling = "random".
Value must be between 0 and 1. The default is 0.5.}

\item{alpha}{Numeric cut-off value for deciding the set of reproducible
peaks. The default is 0.05.}

\item{size}{Numeric specifying the minimum peak size when peaks are
reconnected after fragmentation. The minimum peak size is ordinarily
determined by the size of surrounding peaks, but in the case that there are
none, this value will be used. The default is 20.}
}
\value{
A list containing a summary of the MSPC along with the path to the
output files.
}
\description{
\code{multiple_replicates_mspc()} is a wrapper of the \link{rmspc}{mspc()}
function. MSPC handles an arbitrary number of replicates, but is not
recommended for the simple case of n = 2, where we suggest using
\code{conservative_idr()} or \code{optimal_idr()}.
}
\examples{
\dontrun{
input1 <- testthat::test_path("testdata", "r1_test_creb.bam")
input2 <- testthat::test_path("testdata", "r2_test_creb.bam")
input3 <- testthat::test_path("testdata", "r3_test_creb.bam")

multiple_replicates_chipr(treat_files = c(input1, input2, input3),
                          out_dir = tempdir(),
                          ...
                          )
                          }

}
